#  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚£¶‚£¥‚£∂‚£æ‚£ø‚£∂‚£∂‚£∂‚£∂‚£¶‚£§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä                                              
#  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°∂‚†ª‚†õ‚†ü‚†ã‚†â‚†Ä‚†à‚†§‚†¥‚†∂‚†∂‚¢æ‚£ø‚£ø‚£ø‚£∑‚£¶‚†Ñ‚†Ä‚†Ä‚†Ä              ìêì  Matplotlib ìêî           
#  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†î‚†ã‚†Ä‚†Ä‚†§‚†í‚†í‚¢≤‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚£§‚£§‚£¨‚£Ω‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ä‚†Ä                                              
#  ‚†Ä‚†Ä‚†Ä‚£Ä‚£é‚¢§‚£∂‚£æ‚†Ö‚†Ä‚†Ä‚¢Ä‚°§‚†è‚†Ä‚†Ä‚†Ä‚††‚£Ñ‚£à‚°ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£¶‚†Ä       Dev: oezzaou <oussama.ezzaou@gmail.com> 
#  ‚¢Ä‚†î‚†â‚†Ä‚†ä‚†ø‚†ø‚£ø‚†Ç‚††‚†¢‚£§‚†§‚£§‚£º‚£ø‚£∂‚£∂‚£§‚£ù‚£ª‚£∑‚£¶‚£ç‚°ª‚£ø‚£ø‚£ø‚£ø‚°Ä                                              
#  ‚¢æ‚£æ‚£Ü‚£§‚£§‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á                                              
#  ‚†Ä‚†à‚¢ã‚¢π‚†ã‚†â‚†ô‚¢¶‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°á       Created: 2025/07/10 15:41:04 by oezzaou
#  ‚†Ä‚†Ä‚†Ä‚†ë‚†Ä‚†Ä‚†Ä‚†à‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†á       Updated: 2025/07/12 16:35:14 by oezzaou
#  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚¢Ä‚£æ‚£ø‚£ø‚†ø‚†ü‚†õ‚†ã‚†õ‚¢ø‚£ø‚£ø‚†ª‚£ø‚£ø‚£ø‚£ø‚°ø‚†Ä                                              
#  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†á‚†Ä‚¢†‚£ø‚£ü‚£≠‚£§‚£∂‚£¶‚£Ñ‚°Ä‚†Ä‚†Ä‚†à‚†ª‚†Ä‚†ò‚£ø‚£ø‚£ø‚†á‚†Ä                                              
#  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†±‚†§‚†ä‚†Ä‚¢Ä‚£ø‚°ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚†è‚†Ä‚†Ä                             ìÜ©‚ôïìÜ™      
#  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ñ‚†Ä‚†Ä‚†Ä‚†ò‚¢ß‚°Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚†ã‚†Ä‚†Ä‚†Ä                     ìÑÇ oussama ezzaouìÜÉ  
#  ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚†Ñ‚£Ä‚°Ä‚†∏‚†ì‚†Ä‚†Ä‚†Ä‚††‚†ü‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä                                              

===[ Matplotlib: Introduction ]=================================================
* 'MatPlotlib' is one of the most powerful and widely used libraries for
  'data visualization' in python, It is a '2D plotting' library.

  # INFO:> Matplotlib is build on the top of 'NumPy'

  import matplotplotlib.pyplot as plt

  plt.plot() # for plot line
  plt.show() # visualize the the plot

  - 'matplotlib.pyplot': is 'high-level stateful interface' to Matplotlib, it is
    a 'Module'.

===[ Figure & Axes ]============================================================
* A 'Figure' is 'top-level container' that holds all plot elements, It is the
  'entire canvas' on which everything is drawn.
  - Think of it as the 'page' or 'window' that contains your visualizations.
    Here is a detailed breakdown ot its 'role', 'structure', and 'relation to'
    'subplots and axes'.

--> [ Role of A Figure: ]
    - A 'Figure' represents 'the whole image' or 'plotting area', including
      'subplots', 'titles', 'legneds', and 'other decorations'.
    - It serves as the 'container' for one or more 'Axes' objects.
    - It defines the 'output size' and manages 'layout resolution (DPI)', and
      'saving to file' (e.g, via 'savefig()').

--> [ Structure Of A Figure: ]
    * A 'Figure' is made up of:
      - 'Axes': The actual plotting area(s) where data is visualized. 
      - 'Subplots': A grid of Axes created via 'plot.subplot()' or
                    'plot.subplots()'
      - 'Figure-level elements': Titles ('fig.suptitle()'), legends(shared),
                                 colorbars, etc.
      - 'Metadata': DPI, size, background color.


  Figure
  ‚îú‚îÄ‚îÄ Subplot(s) (organized via subplot() or subplots()) 
  ‚îÇ   ‚îî‚îÄ‚îÄ Axes (1 or more per subplot)
  ‚îÇ       ‚îú‚îÄ‚îÄ XAxis
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Ticks
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Tick Labels
  ‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ Axis Label (e.g., "Time")
  ‚îÇ       ‚îú‚îÄ‚îÄ YAxis
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Ticks
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Tick Labels
  ‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ Axis Label (e.g., "Value")
  ‚îÇ       ‚îú‚îÄ‚îÄ Title (of that specific Axes)
  ‚îÇ       ‚îú‚îÄ‚îÄ Plot Elements
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Line2D (e.g., from `plot()`)
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Patch (Bar, Pie, Rectangle, etc.)
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Collection (e.g., Scatter plots)
  ‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ Images (from `imshow()`, etc.)
  ‚îÇ       ‚îú‚îÄ‚îÄ Legend
  ‚îÇ       ‚îú‚îÄ‚îÄ Grid
  ‚îÇ       ‚îú‚îÄ‚îÄ Spines (Borders)
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Top
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Bottom
  ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ Left
  ‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ Right
  ‚îÇ       ‚îî‚îÄ‚îÄ Background (Facecolor of Axes)
  ‚îú‚îÄ‚îÄ Figure-level Title (`fig.suptitle()`)
  ‚îú‚îÄ‚îÄ Shared Colorbar(s) or Legend(s) (if added)
  ‚îú‚îÄ‚îÄ Layout Manager
  ‚îÇ   ‚îú‚îÄ‚îÄ `tight_layout()`
  ‚îÇ   ‚îî‚îÄ‚îÄ `constrained_layout`
  ‚îú‚îÄ‚îÄ Figure Background (Facecolor)
  ‚îú‚îÄ‚îÄ DPI (Resolution: dots per inch)
  ‚îî‚îÄ‚îÄ Save functionality (`savefig()`)

# NOTE:-------------------------------------------------------------------------
# - In Matplotlib, there is 'no separate object type called' `Subplot` in most
#   common usage:
#   . When we say 'subplot', we are referring to an 'Axes Object' that was
#     created using a grid layout like plt.subplots() or pltsubplots()
# CONCLUSION: So the term 'subplot' just means an Axes arranged in a grid


===[ Figure: ]===
* 'Figure Object' is just a container for Axes Objects (subplots). 

    |---------------------[ Figure Object Creation: ]--------------------|
    |                                 |                                  |
[ plot.figure() ]              [ plot.subplots() ]            [ plot.subplot() ]
- This is the 'basic'         - This is the 'preferred'     - This is an 'older'
  'low-level' way to            'way' to create a Figure      'way' to create 
  create a Figure Obj           'wint one or more Axes'       'one subplot'
[ plot.figure(figsize=()) ]     '(subplots)' in a grid:       '(Axes) at a time'
. Creates and 'empty Figure'  [fig, ax = plt.subplots() ]     inside a figure:
. You must 'manually add'     . Returns a 'Figure' and an   [plot.subplot(...) ]
  'Axes' (`with add_axes()`     'Axes' object (or array       . rows: 
  or `add_subplot()`)           or Axes)                      . cols:
                                                              . nbr of splots 
                                                            - This creates the 
                                                            `Figure` implicitly
                                                            - Useful for simple
                                                              quick plots.

===[ Axes: ]===

    |---------------------[ Axes Object Creation: ]--------------------|
    |                                 |                                |
[ plot.subplots() ]           [ fig.add_subplot() ]        [ fig.add_axes()  ]
- This creates a Figure     - Add one 'Axes' as a       - Create an 'Axes' by 
  'and' one or more           'subplot' inside an         specifying its exact
  'Axes' arranged in a        'existing Figure'.          position on the figure
  grid.                     [fig.add_subplot(1,1,1)]      (coordinates 0|--> 1)
> Ex:                       # 1 row, 1 col, subplot 1  #left,bottom,width,height 
[fig, ax = plt.subplot()]   - returns an Axes/subplot  [ fig.add_axes(l,b,w,h) ]
  ax.plot([...], [...])
  plt.show()
- Recommended & easiest

> [ Summary: ]
    __________________________________________________________________
    | Method              | What it does          | Use When         |
    |---------------------|-----------------------|------------------|
    | `plt.subplots()`    | Creates Figure + grid | Most common,     | 
    |                     | of Axes               | easiest layout   |
    |---------------------|-----------------------|------------------|
    | `fig.add_subplot()` | Adds Axes as subplot  | You want manual  |
    |                     | to existing Fig       | subplot control  |
    |---------------------|-----------------------|------------------|
    | `fig.add_axes()`    | Adds Axes at exact    | You want precise |
    |                     | position              | placement        |
    |_____________________|_______________________|__________________|
