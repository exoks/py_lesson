#  ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣤⣦⣴⣶⣾⣿⣶⣶⣶⣶⣦⣤⣄⠀⠀⠀⠀⠀⠀⠀                                              
#  ⠀⠀⠀⠀⠀⠀⠀⢠⡶⠻⠛⠟⠋⠉⠀⠈⠤⠴⠶⠶⢾⣿⣿⣿⣷⣦⠄⠀⠀⠀                    𓐓  math 𓐔           
#  ⠀⠀⠀⠀⠀⢀⠔⠋⠀⠀⠤⠒⠒⢲⠀⠀⠀⢀⣠⣤⣤⣬⣽⣿⣿⣿⣷⣄⠀⠀                                              
#  ⠀⠀⠀⣀⣎⢤⣶⣾⠅⠀⠀⢀⡤⠏⠀⠀⠀⠠⣄⣈⡙⠻⢿⣿⣿⣿⣿⣿⣦⠀       Dev:  oezzaou OussamaEzzaou@gmail.com 
#  ⢀⠔⠉⠀⠊⠿⠿⣿⠂⠠⠢⣤⠤⣤⣼⣿⣶⣶⣤⣝⣻⣷⣦⣍⡻⣿⣿⣿⣿⡀                                              
#  ⢾⣾⣆⣤⣤⣄⡀⠀⠀⠀⠀⠀⠀⠀⠉⢻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇                                              
#  ⠀⠈⢋⢹⠋⠉⠙⢦⠀⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇       Created: 2025/05/15 19:09:30 by oezzaou
#  ⠀⠀⠀⠑⠀⠀⠀⠈⡇⠀⠀⠀⠀⣠⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠇       Updated: 2025/05/27 19:48:03 by oezzaou
#  ⠀⠀⠀⠀⠀⠀⠀⠀⡇⠀⠀⢀⣾⣿⣿⠿⠟⠛⠋⠛⢿⣿⣿⠻⣿⣿⣿⣿⡿⠀                                              
#  ⠀⠀⠀⠀⠀⠀⠀⢀⠇⠀⢠⣿⣟⣭⣤⣶⣦⣄⡀⠀⠀⠈⠻⠀⠘⣿⣿⣿⠇⠀                                              
#  ⠀⠀⠀⠀⠀⠱⠤⠊⠀⢀⣿⡿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⠀⠀⠘⣿⠏⠀⠀                             𓆩♕𓆪      
#  ⠀⠀⠀⠀⠀⡄⠀⠀⠀⠘⢧⡀⠀⠀⠸⣿⣿⣿⠟⠀⠀⠀⠀⠀⠀⠐⠋⠀⠀⠀                     𓄂 oussama ezzaou𓆃  
#  ⠀⠀⠀⠀⠀⠘⠄⣀⡀⠸⠓⠀⠀⠀⠠⠟⠋⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀                                              

===[ Math: Quantities ]=========================================================
- In mathematics, 'quantities' refer to 'measurable' or 'coubtale'
  properties - things that can be described using numbers, symbols, or units. 

_____________________________________________________________________________
| Quantity Type | Has Magnitude?  | Has Direction?  | Example               |
| ------------- | --------------  | --------------  | --------------------- |
| Scalar        | ✅ Yes          | ❌ No           | Temperature, Speed    |
| Vector        | ✅ Yes          | ✅ Yes          | Velocity, Force       |
| Tensor        | ✅ Yes          | ✅ Multi-dir    | Stress tensor, Rank-2 |
| Algebraic     | ✅ Symbolic     | ❌/abstract     | $x^2 + 1$, $a + b$    |
| Discrete      | ✅ Countable    | ❌              | 1, 2, 3 items         |
| Continuous    | ✅ Real values  | ❌              | Distance = 3.25m      |
|_______________|_________________|_________________|_______________________|

- We can 'classify' all 'mathematical quantities' into just 'two broad types',
  the most fundamental division would be:

  * 'Scalar Quantities' (It has only magnitude)
  * 'Vector Quantities' (it has magnitude and direction)

# QUESTION:[ Why this classification? ]=========================================
# - Because it reflects:                                                       |
#     * Whether a quantity is direction-aware (vector), Or purely numerical    |
#    (scalar). All other types—like tensors, matrices, algebraic expressions—are
#    'generalizations' or 'extensions' of these two.                           |
# ==============================================================================

===[ Math: Derivative ]=========================================================
* At its core, a 'derivative' measures 'how something changes'. More precisely,
  it tells you the 'rate of change' of a function at any given point.

Taking a derivative means you are answring this question:
  "if I change the input a little, how much does the output change ?"

> Mathematically:  
  - Given a function f(x), the derivative f'(x) tells you how fast f changes
    'with respect to' x.

> [ Examples: ]
  1|> Let is say a position of a car over time is given by:
      [ f(t) = t^2 ]
  
  - This means the cars distance from home at second is t^2 meters
    the derivative is:
      [ f'(t) = 2t ]

  - at t = 4 seconds
      f(4) = 16 (car distance is 16m )
      f'(4) =  8
  
    t    | 0 -> 1 -> 2 -> 3 -> 4  | s 
    -----|------------------------|----
    f(t) | 0 -> 1 -> 4 -> 9 -> 16 | m 
    -----|------------------------|----
    f'(t)| 0 -> 1 -> 4 -> 6 -> 8  | m/s 

  - This means at t=3 the car distance is 9m and it is moving 6 ms at this point 
  # CONCLUSION:=================================================================
  # - So, The derivative tells us the velocity — how fast the position is      |
  #   changing.                                                                |
  # ============================================================================

  - let is make the the rate of changes constant: grows constant. 
    [ f(t) = t ]
    
    - the derivation is:
      [ f'(t) = 1 ] 
  
  - This means that the speed is changing by [ 1 m/s ] at any point.

  2|> [ Cost Function: ]
      - Let’s say a company’s production cost is:
          C(x) = 100 + 5x + 0.5x^2

      - Where x is the number of products made, and C is the cost in dollars.
        The derivative:
          C′(x) = 5 + x

      - This means:
        * For each additional unit made, cost increases by 5 + x dollars
        * At x=10: cost increases by 15 dollars per unit
        * It tells how marginal cost behaves

  3|> [ Population Growth: ]
      - Suppose a population grows according to:
        P(t) = 1000 * e^0.03t

      - Where t is in years. The derivative is:
        P'(t) = 1000 * 0.03 * e^0.03t

      - It tells how fast the population is growing at any time 't', and that
        growth is 'exponential'.

> [ General Patterns: ]
    _____________________________________________________________________
    | Function f(x)   | Derivative f'(x)   | Interpretation             |
    |-----------------|--------------------|----------------------------|
    | x^2             | 2x                 | Change grows linearly      |
    | x^3             | 3x^2               | Change grows quadratically |
    | sin(x)          | cos(x)             | Change oscillates          |
    | e^x             | e^x                | Growth matches size        |
    | ln(x)           | 1/x                | Slows as x grows           |
    |_________________|____________________|____________________________|

===[ Math: Partial Derivative ]================================================= 
* A partial derivative measures 'how a multivariable function changes with the'
  'respect to one variable while holding all the variables constant'.

  > Ex:
      f(x, y) = x^2 + 3xy + y^2

  - How does 'f' change if i change 'x' a little, but keep 'y' fixed ?
    |=> that is 'the partial derivative with the respect to x' written ∂f/∂x
  - How does 'f' change if i change 'y' a littel, but keep 'x' fixed ? 
    |=> that is 'the partial derivative with the respect to y' written ∂f/∂y

# QUESTION:[ Why are partial derivative used ?]
- Because many real-world systems depend on multiple variables, partial
  derivatives help us isolate the effect of just one variable.
  ______________________________________________________________________________
  | Term               | Meaning                                               |
  |--------------------|-------------------------------------------------------|
  | Partial Derivative | Rate of change with respect to one variable at a time |
  | Notation           | ∂f/∂x fsubscript(x)                                   |
  | Key Feature        | Other variables are 'held constant'                   |
  | Main Use           | Understand systems with 'multiple variables'          |
  |____________________|_______________________________________________________|

> [ Examples: Derivative VS Partial Derivative ]
  [[[ Derivative]]]
    f(x) = 3x^2 + 2x + 1
  - This has 'one variable' x, so we use the regular derivaitve:
    f'(x) = d/dx(3x^2 + 2x + 1) = 6x + 2
  - [ This tell us the slop (rate of change) of the function at any point x ] 

 [[[ Partial Derivative ]]] 
    f(x, y) = 3x^2 + 2xy + y^2

    | ∂f/∂x = 6x + 2y 
  --|
    | ∂f/∂y = 2x + 2y

  - These tell us:
    * How 'f' changes in the 'x direction' (slop if you walk east).
    * How 'f' changes in the 'y direction' (slop if you walk north).

  # INFO:
  # - Steep (of a slop) rising of falling at a sharp angle.
  #   ex: a steep slop
  # - Descent (Noun) a Movement down 

===[ Analogy: ]=================================================================
- Imagine you're on a hill.
- The derivative is like walking along a 1D trail — you're asking
  |=> "how steep is the path right here?"

  The partial derivative is like looking at the steepness:

  - North-South (∂f/∂y)
  - East-West (∂f/∂x)

- You are still on the hill, but you are isolating one direction at a time.

===[ In Software Term: 💻 ]======================================================
* Derivative:
  - Used when modeling simple curves or optimizing single-variable functions.

* Partial Derivative:
  - Crucial in:
    > Gradient Descent (you compute partials for each variable)
    > Neural Networks (backpropagation uses partial derivatives)
    > Physics Engines (e.g., surface normals)
    > Multivariable optimization (e.g., tuning hyperparameters)

# CONCLUSION:===================================================================
# - Derivatives are for single-variable functions.                             |
# - Partial derivatives are for multi-variable functions.                      |
# - Partial derivatives are just an extension of the derivative idea           |
#   => they measure change in one direction while holding others constant.     |
# ==============================================================================

> [ Tangent line equation: ]====================================================
* If 'f' is 'differentiable' at x = a
  
  1|> Use this direct mathimathic rule to find it:
        => [ y = f'(a) * (x - a) + f(a) ] 

  2|> If 'f' is 'differentiable' at x=a => the slop is a so the equation is:
        (1) => [ y = f'(a) * x + b ]
      - The point (a, f(a)) belong to f(x) and tangent line equation, so: 
            => [ f(a) = f'(a) * a + b]
        (2) => [ b = f(a) - f'(a) * a ] 
      - from (1) and (2):
        f(x) = f'(a) * x - f'(a) * a + f(a)  
  =====> [ y = f'(a) * (x - a) + f(a) ]: This is the first equation 
  # NOTE:=============================================================
  # - the second section is the proof for the first equation:        |
  #   |=> [ y = f'(a) * (x - a) + f(a) ]                             |
  # ==================================================================

  # INFO:=============================================================
  # - You can write f'(x), dy/dx or f'(x) * dx = dy                  |
  # ==================================================================

===[ Why limits introduced in math ?: ]=========================================
* Limits were created to solve a big problem in 'calculus' and 'analysis'.

  'How do we deal with values that constantly changing, especially when they'
  'get extremly close to something -- but never actually reach it ?'

===[ Problem: ]===
* Imagine you are trying to measure 'how fast' something is moving at an exact
  moment.
- let's say a car drives 100 km in 2 hours - that is 50km/h.
- But what if you want to know the exact speed at a single moment, like at t = 1
hour?
You can’t measure it directly, because speed is based on how distance changes
over time. Instead, you look at the average speed over smaller and smaller
time intervals around t = 1. Then, you use a limit to figure out what value the
speed is approaching as the interval gets closer and closer to zero. That gives
you the instantaneous speed.
# NOTE: It is about finding the instantaneous speed(sor3a lahdiya)
- The smaller the interval, the more accurate your answer gets. But this raises
  the question:
  'What happens as the time interval gets closer and closer to zero?'

- This "approaching" behavior is 'not easy to define'using regular math, You
  need a way to 'talk about a value you are getting close to' even if you
  never each it.

# CONCLUSION:===================================================================
# - Limits give us a precise way to say:                                       |
# - 'As X gets closer and closer to some value, Y get closer and closer to this|
#   other value'                                                               | 
# So in this example:                                                          | 
# - As the time interval approaches to t=1h, the average speed appraoches the  |
#   'instantaneous speed'.                                                     | 
# - This idea helps define:                                                    |
#   . Instantaneous speed (used in derivatives)                                |
#   . Area under curves (used in integrals)                                    |
#   . Functions that behave oddly near a point                                 |
#   . Infinite series (like 1 + 1/2 + 1/4 + 1/8 + …)                           |
# - Real-world need:                                                           |
#   . Physics: how fast objects move or accelerate at a single point in time   |
#    . Engineering: how systems behave when inputs change slightly             |
#    . Economics: marginal cost/profit — what happens if you produce one more  |
#      item.                                                                   |
#    . Computer graphics: modeling curves smoothly                             |
# ==============================================================================

# QUESTION:[ If the derivative gives me V(t), why do I need limits? ]===========
- You can’t get a derivative without limits — because the derivative is the
  limit of average rates of change.
- The 'derivative is defined as a limit' 
- Without the concept of a limit, we could not rigorously define what a
  derivative means. 
# QUESTION:[ Why not just say "derivative"? ]===================================
- We do -- but behind the scenes, every derivative relies on a limit.
- Derivative is a 'shortcut' to calculate the rate of cchange at a at x E R.
- Limits allows as to calculate at specific point, The derivatie is another
  shortcut that calculate the derivative in interval.

# WARNING:[ When the point is not differentiable: ]=============================
# - f'(x) = 0 DOES NOT MEAN that f is not differentiable at x. 
#   > Ex: 
#     f(x) = |x|
#         |
#         |
#     \   |   /
#      \  |  /
#       \ | /
#        \|/____________ (x)
#         0
# - f'(x = 0) is not differentiable 
# QUESTION: Why we can't just say the rate of change is 0 when a function is not
# differentiable at a point ?
# - At x = 0:
#   . The left-hand slope is -1 (from f(x)=−x for x<0)
#   . The right-hand slope is +1 (from f(x)=x for x>0)
# - Since the left and right derivatives are not equal, the overall derivative
#   does not exist at x = 0.
#===[ Analogy: ]================================================================
# - Imagine you’re standing at a sharp corner on a path.
#   Can you say the path is "flat" there? No — there’s no single direction you
#   are facing. Same with a function: at a sharp point, the slope isn’t 0 — it’s
#   undefined.
# ==============================================================================

===[ Limit cases: ]===
  - Let's take f(x) and x = a is point from the difined interval of f(x)  

  1|>lim(x->a) f(x) - f(a) / x - a = slop E R  
      - f is derivative at x = a 
      - tangent line equation:  y = f'(a) * (x - a) + f(a) 
  2|>lim(x->a+) f(x) - f(a) / x - a = l <-> lim(x->a+) f(x) - f(a) / x - a = c
      - f is derivate at the right of a | y = R * (x - a) + f(a)  
      - f is derivate at the left of a  | y = L * (x - a) + f(a) 
      - f is not derivative at x = a
  3|> lim(x->a) f(x) - f(a) / x - a = ∞ (+∞ or -∞)
      - f is not derivative 

> [ Summry: ]
    ________________________________________________________________
    |            Property           | Left   | Right  | Derivative |
    |                               | exists | exists |  at 'a'    |
    |-------------------------------|--------|--------|------------|
    | - Both exist and equal        |   ✅   |   ✅   |     ✅     |
    | - Left exists, right does not |   ✅   |   ❌   |     ❌     |
    | - Right exists, left does not |   ❌   |   ✅   |     ❌     |
    | - Both exist, not equal       |   ✅   |   ✅   |     ❌     |
    |_______________________________|________|________|____________|

===[ Vectors: ]================================================================= 
* Vector is mathimatical quantitie that has both 'magnitude' and 'direction'. 
  (well-structered object)

  > [ Chasles Relation: ]

      [ AB-> + AC-> = BC-> ] 

    * From this relation we can understand the addition/substruction on vectors.
    * a-> - a-> = |x| + |-x| = |0| = 0-> (vector quantity)
                  |y|   |-y|   |0|
    * ||a|| - ||a|| = 0 (scalar quantity) 

  > [ Multiplication: ]
    - a-> : ---->  
    - 2a->: --------> 
    - -a->: <----

  ===[ vector forms: ]===

    > [  vector: ]
      - This form is the most famous one 
      v-> = |x|
            |y|

    > [ Polar Form: ]
      - The 'polar form' of a vector is away to represent a 2D vector using its
        its 'magnitude' (length) and 'direction' (angle), instead of its
        'horizontal and vertical components'
      V-> = < magnitude, alpha >  

      V-> = | ||V->|| * cos(alpha) |
            | ||V->|| * sin(alpha) |

      - ||v->|| = sqrt(x^2 + y^2)
      - alpha = tan^-1 (y/x) 

    > [ Unit vectors: ]
      - V-> = x * i-> + y * j-> 

      - i-> : is the unit vector on x | i-> = |1| 
                                              |0|

      - j-> : is the unit vector on y | j-> = |0| 
                                              |1|
  ===[ Vectors: Product ]=== 
               |
      |--------|------------------------------------------------|
      |                                                         |
  [ Dot Product (Inner/Scalar Product) ]                  [ Cross Product ] 
    - Output: Scalar quantity  

  - The 'projection' of one vector onto another, 'scaled' by the length
    of the other.

    . column * row = outer product 
    . row * column = dot product

  # NOTE:
  # - for know one we are goint to take this part as it is, the abstruction here
  #   is not clear  
  # ERROR: DO NOT FORGET TO UNDERTAND THIS PART

# NOTE:[ Analogy: ]=============================================================
# - You can simply look at the vector as an object (container) that has        |
#   properties (x, y, z ...).                                                  | 
# - From what you have learnt in C++ vector is an object, (vector quantity in  | 
#   math), not and int or double that you can apply operation directly         |
#   (scalar quantity in math), Opertion on object must use overloading operators  
#   , the same idea in math you can't apply the scalar quantity rules directly |
#   on the vector quantity.                                                    | 
# - the key feature here that there is an object formula you must respect      |
#   but the operations are done inside the overloading operators in c++.       |
# - DO NOT FORGET this analogy in the context of computer sience.              | 
# ==============================================================================
# QUESTION:[ What is the vector in 1D ? ]=======================================
# - A 1D vector is a number that represents:
#   * Magnitude: How far is goes
#   * Direction: positive (->) or negative (<-) 
# - You can think of it like:
#   [ V-> = +3 (right) or V-> = -5 (left) 
#
#   .  3: vector going 3 units to the right 
#   . -5: vector going left 5 units to the left
# NOTE:=========================================================================
# - It is just a single number - but that number carries direction too.
# - All 1D vectors are 'real numbers' | v-> E R
# - Operation still work, just like higher-dimensional vectors 
# QUESTION:[ What does it still count as a vector ?]============================
# - Follows vector rules (addition, scaling, etc ...)
# - Exist in vector space R^1 
# - can be used in linear algebra, physics, etc.
# ==============================================================================

- vector are two main types: row or column 

  > 'colum vector' is the famous one that we know than can be in the plan (x, y).
    V-> = |x|
          |y|

  > 'row vector' are not typically interpreted 'geometrically' as object
    in space. 
    V-> = [x y] 

    - A row vector acts as a kind of linear functional — it takes a 
      vector and produces a scalar via the dot product:
    r⃗⋅v⃗ = x^2 + y^2

===[ Linear Algebra: ]==========================================================
* To understand the linear algbera in a good way, we have to start from the 
  equations. An equation is a 'statement that asserts the equality of two'
  'expressions'

  > [ Syntax: ]
    Expression1 = Expression2 

  > [ Type of equations based on the degree ] 
    1|> Linear Equation (Degree 1)
        ax + b = 0

    2|> Quadratic Equation (Degree 2)
        ax^2 + bx + c = 0

    3|> Cubic Equation (Degree 3) 
        ax^3 + bx^2 + cx + d = 0

    4|> Quartic: 
        ax^4 + bx^3 + cx^2 + dx + e = 0

    5|> Higher-Degree 
        ax^n + bx^n-1 ... = 0 

  - Called 'polynomial equation' of degree 'n'. 

# NOTE:
# - Multiple equations solved together is called 'system of quations'.
#   * Linear system.
#   * Nonlinear system: include at least one nonlinear equation 
# REVISION:
# - System equation: allows us to model real 'world problems' where 'multiple 
#   condition must be satisfied at the same time'.

# QUESTION:[ What is the diff between function and equation? ]=================
# - An quation is statement of equality between two expressions, its goal is to
#   solve the variable(s) that makes the quation true.
# - A function is a rule or relationship that assigns 'exactly one output'
#   for 'each input', It tells you how to compute the value of 'f(x)' for any
#   'x'.
# - Relation: Every function can be written as an equation.
#   ex: f(x) = x + 2 => y = x + 2 
# WARNING: > Not every equation is a function.
# - ex: x^2 + y^2 = r, this is the equation of the circle
# - let's take x = 0 => 0^2 + y^2 = r => y = r and y = -r
# - x input => have two value 7 => it is not function
# # CONCLUSION:
# - An equation asks: "What value make this true" 
# - A function tells you: "Given this input, what is the output". 
# - A function must return one and only one output per input.
# - Equations that allow multiple outputs for a single input violate this rule.
# - Therefore, not all equations define functions.
# - Function in most programming language return only one object.
# ==============================================================================

> [ Simple linear equation: ]
    ax + b = c

  -> To solve this equation and find Xs that solve this equation ax + b = c, The
     process is easy Xs = c-b / a => Xs is the crossing point between the line
     y = ax + b and axis x: y = 0

> [ Multi linear equation: ]
    ax + by + cz + b = 0 

  > Ex:
    x + y = 2

  -> (1, 1) is a solution for this equation, (2, 1) is also another solution,
      multi linear equation accept an infinite number of solution,
      - If you take any point A(x, y) from the line y = -x + 2, A is a solution 
        for the equation [ x + y = 2 ].
      - emmm as you can see we must add another equation condition that tells
        what is the relation between x and y:

       | x + y = 2
    => |
       | x - y = 6

      - This equation just add another equation condition, It says find x and y
        where x + y = 2 and x - y = 6, This system is called "system equation". 
        where two condition are related and we need to find the 'satisfied'.
        solution for this 'linear equation system'.
      - In this case we have 2 ways to find the solution: 
                            /   \
                          /       \
                        /           \
        [ Algebraic Method ]      [ Ghraphical Method]

  > [ real-life problem example: ]
    - we have 24 dh and want to by 10 items of books and pens, The book is 3dh
      and the pen is 2dh, the system equation for this problem is:
      
      | x + y = 10
    =>|
      | 3x + 2y = 24

      - x: number of books
      - y: number of pen

      - Solution is the point (4, 6):
      | x + y = 10    => 4 + 6 = 10
    =>|
      | 3x + 2y = 24   => 12 + 12 = 24 

    * You have to buy 4 books and 6 pens. 

===[ Algebraic Method: ]===
- Solve one equation for one variable, then substitute into the others. 

  > Ex:
     | 2x + y  = 0 
  => |
     | x  + y = 1

- First we are going to solve one equation:
     2x + y = 0 => y = -2x 

     x + y = 1
  => x - 2x = 1
  => x = -1 (x is found)

- let's get back to the same equation and look for y.
     x + y = 1
  => -1 + y = 1
  => y = 2 (y is found) 

- the point (-1, 2) is the solution of the linear ssystem equation. 
     | 2x + y  = 0 => 2 * -1 + 2 = 0  (True) 
  => |
     | x  + y = 1 => -1 + 2 = 1 (True)

# NOTE:========================================================================= 
# - This method is good for small systems (2 -> 3 equations), It can be        |
#   expended for mediam systems also.                                          | 
# - Simple but not efficient for large systems.                                |
# ==============================================================================

===[ Ghraphical Method: ]===
* You draw the equations on a graph and look for 'intersections'. 
  - graph all the lines, the point where intersect is the solution:
    M(x,y) satisfies all the equations.

# NOTE:=========================================================================
# - Use this method if the system has 2 variable.                              |
# - You want a visual understanding.                                           | 
# - Not practical for 3+ variables or precise answers.                         | 
# INFO:=========================================================================
# - Algebraic methods are good for small to mediam linear systems, It is often | 
#   and hard to find the solution for the system equations.                    |
# - Ghraphical method is not practical at all, it is good just if want to      |
#   understand the system equation solution.                                   | 
# - mathematician suffered alot with these method, they had to find an         |
#   efficient and inovative solution which is [LINEAR ALGEBRA]                 |
# ==============================================================================
 
===[ Linear Algebra: ]==========================================================
* Linear algebra is a branch of mathematics, It is the 'theory' of vectors and
  matrices.

# REVISION:=====================================================================
# - We know that the story of the linear algebra starting from the system      |
#   equation where we had to find the best solution for a system equation      |
#   with an efficient way. linear algebra says the solution: In linear algebra,|
#   solving a system means finding the vector that, when transformed by a      |
#   matrix, yields the result vector.                                          |
# - Equation:                                                                  | 
#   [ A * V-> = V'-> ]                                                         | 
# - A : a matrix representing the linear transformation                        |
# - V : the unknown vector (the solution you're solving for)                   |
# - V': the result/output vector (what the system produces)                    |
# ==============================================================================

- let's take a linear system equation: 
     | 2x + y  = 0 
  => |
     | x  + y = 1 

- Linear algebra says: 
  . vector i-> = (2, 1): unit vector on 'x' 
  . vector j-> = (1, 1): unit vector on 'y'
  . vector r-> (0, 1) is i-> + j->

vector r is linear transfored array, it must returned to its original state:
  - i->(1, 20) =>> i->(1, 0)
  - j->(1, 1)  =>> j->(0, 1)

- r'-> vector is (-1, 2): x=-1 and y=2 is the solution for the linear
  system equation.

     | 2x + y  = 0 
  => |
     | x  + y = 1 

# CONCLUSION:===================================================================
# - Linear algebra: The solution is the vector before the linear transformation. 
# ==============================================================================

===[ Linear Algebra: Matrix ]===================================================
- Matrix is 'rectangular array(or table)' of numbers arranged in
  'rows and s'. 
- they are used becasue they provide a 'compact, origanized, and powerful way'
  'to represent and perform calculations' with complex systems and structures.

  > [ Syntax: ] 

        |a11 a12 a13 ... a1n| \
    A = |a21 a22 a23 ... a2n|  | rows
        |am1 am2 am3 ... amn| /
          \___|___|_______/
              s

    # NOTE:
    # - A subscript(n * m): is the size of the matrice.
    # - Matrix holds the same idea of an array in the context of computer sience
    #   Ex: int matrix[row][s]: array with size [ row * columns ]  

- The 'linear system equation' can be represented as well-structured 'object' in
  math, This object is called 'matrix'.

  > Ex: 
     | 2x + y  = 0 
  => |
     | x  + y = 1 

    - Ax-> = v->: is the representation of the system linear equation where:    
      A = |2  1| 
          |1  1|

    - Matrix can represent a linear transformation also:
      A = |1  0| = [i-> j->] = I
          |0  1|

    # INFO: > 'I' is called 'identity matrix'
    - This one represent the normal state of the unit vectors (i-> and j->) 

  # NOTE:=======================================================================
  # - A vector is a matrice with just one row or one .                   |
  # - A matrix can be thought of as collection of vectors.                     |
  # - vector is one-dimenstional array of numbers, it has <magnitude>          |
  #   and <direction>.                                                         |
  # - A two-dimensional array of numbers (rows and s), it can represent  |
  #   <linear transformations>, <systems of equations>. etc.                   | 
  # ============================================================================

# INFO:=========================================================================
# - Linear Transformation: means a vector in the space is being mapped to a new|
#   vector often changing its length, direction or both in linear way (no      |
#   bending, warping or curing).                                               | 
# - We can say: Linear Transformation changes the 'vector space',              |
#   'coordinate plane' or'cartesian plane'                                     | 
# ==============================================================================

===[ Matrix: Operations (Addition, Substruction and Multiplication) ]===
  > [ Addition: ]
    - they must have the same size
    - Ex:
        |1 2| + |3 4| = |4  6|
        |3 4|   |5 6|   |8 10| 

  > [ Substruction: ]
    - they must have the same size
        |1 2| - |3 4| = |-2 -2|
        |3 4|   |5 6|   |-2 -2| 

  > [ Multiplication: ]
    - You must mulitipy the rows and s following this rule:  

    A1 = |a b|    A2 = |e f i|
         |c d|         |g h j|

   
   A1 * A2 = |(ae + bg)  (af + bh)  (ai + bj)|
             |(ce + dg)  (cf + dh)  (ci + dj)

    > Ex:
      |1 2| * |0 3 4| = |4 5  10| 
      |3 4|   |2 1 3|   |8 13 24| 

  # NOTE:> Devision in the context of matrix has no sense 

===[ Marix: Inverse Matrix ]===
* Inverse Matrix is the same matrix that return the coordinate plan to its 
  origin values (A^-1) where: 
  A = |2 0|
      |0 2|

  A^-1 = |1/2   0| 
         |0   1/2|

  A * A^-1 = |2 0| * |1/2   0| = |1 0| = I (identify matrix)   
             |0 2|   |0   1/2|   |0 1|

  # INFO:[ A * A^-1 = I]

  - We are going to use the above equation to solve the system equation in 
    linear algebra:

    [ A * V-> = V'-> ] 

    - A: is the linear transformation matrix that changed V-> to V'-> and based
      on the concept of inverse matrix we can say:
      [ A^-1 * V'-> = V-> ]
    - It Seems totaly logic if 'A' has transformed V-> to V'->, A^-1
      would change V'-> to V
    > <Mathimatical proof>:
      => A^-1 * A * V-> = V'-> * A^-1 
      => I * V-> = V'-> * A^-1
      => [ V-> = V'-> * A^-1 ] 
